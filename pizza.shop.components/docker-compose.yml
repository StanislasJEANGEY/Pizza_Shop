version: '3'
networks:
  pizza-shop.net:
    driver: bridge
services:

  # service api.pizza-shop : api pour la prise de commandes
  #
  api.pizza-shop:
    image: 'canals/php:8.2'
    env_file: ./shop.env
    ports:
      - '181:80'
    volumes:
      - ../shop.pizza-shop/public:/var/www/html
      - ../shop.pizza-shop:/var/www
    working_dir: /var/www/
    networks:
      pizza-shop.net:
        aliases:
          - api.pizza-shop.local
    depends_on:
      rabbitmq:
        condition: service_healthy




  # service sql pour le stockage des commandes -
  # utilisé par l'api order
  pizza-shop.commande.db:
    image: 'mariadb:latest'
    command: '--default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci'
    env_file: ./shop.env
    ports:
      - '186:3306'
    networks:
      - pizza-shop.net
    volumes:
      - ../shop.pizza-shop/sql:/var/sql
      - ../shop.pizza-shop/sql/commande:/docker-entrypoint-initdb.d

  # service sql pour le catalogue des pizzas -
  # utilisé par l'api order
  pizza-shop.catalogue.db:
    image: 'postgres:latest'
    env_file: ./cat.env
    ports:
      - '185:5432'
    networks:
      - pizza-shop.net
    volumes:
      - ../shop.pizza-shop/sql:/var/sql'
      - ../shop.pizza-shop/sql/catalogue:/docker-entrypoint-initdb.d
  #
  # service administration des bases sql
  #
  adminer:
    image: adminer
    command: php -S 0.0.0.0:8080 -t /var/www/html
    ports:
      - '189:8080'
    networks:
      - pizza-shop.net
    depends_on:
      - pizza-shop.commande.db
      - pizza-shop.catalogue.db


######################################
###  AUTH Service : service d'authentification JWT
###  api api.auth : auth, check, refresh de token JWT
###  utilise sa propre base de données
######################################
  api.pizza-auth:
    image: 'canals/php:8.2'
    env_file: ./auth.env
    ports:
      - '182:80'
    volumes:
      - ../auth.pizza-shop/public:/var/www/html
      - ../auth.pizza-shop:/var/www
    working_dir: /var/www
    networks:
      pizza-shop.net:
        aliases:
          - auth.pizza-shop.local
    depends_on:
      - pizza-shop.auth.db

  pizza-shop.auth.db:
    image: 'mariadb:latest'
    command: '--default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci'
    env_file: ./auth.env
    ports:
      - '187:3306'
    networks:
      - pizza-shop.net
    volumes:
      - ../auth.pizza-shop/sql:/var/sql
      - ../auth.pizza-shop/sql/commande:/docker-entrypoint-initdb.d

 

## api gateway

  api.gateway:
    image: 'canals/php:8.2'
    ports:
      - '180:80'
    networks:
      - pizza-shop.net
    volumes:
      - ../gateway.pizza-shop/public:/var/www/html
      - ../gateway.pizza-shop:/var/www
    working_dir: /var/www
    depends_on:
      - api.pizza-shop
      - api.pizza-auth

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '183:15672'
      - '184:5672'
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 8s
      timeout: 30s
      retries: 3
    networks:
      - pizza-shop.net
    volumes:
      - ../rabbitmq.pizza-shop:/var/lib/rabbitmq
    env_file: ./rab.env

  node.pizza-shop:
    image: node:alpine
    networks:
      - pizza-shop.net
    working_dir: /usr/app
    command: sh -c "npm i && npm run watch" #for development only
    #command: sh -c "npm i && npm start" #for production only
    volumes:
      - ../node.pizza-shop:/usr/app
    ports:
      - '3333:3000'
    environment:
      - 'PORT: 3000'
      - 'NODE_ENV: development'
